[package]
authors = ["Parity Technologies <admin@parity.io>", "Unique Network <support@uniquenetwork.io>"]
description = "Simple staking pallet with a fixed stake."
edition = "2021"
homepage = "https://unique.network"
license = "GPLv3"
name = "pallet-collator-selection"
repository = "https://github.com/UniqueNetwork/unique-chain"
version = "5.0.0"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
# Note: `package = "parity-scale-codec"` must be supplied since the `Encode` macro searches for it.
codec = { workspace = true, package = "parity-scale-codec" }

log = { workspace = true }
rand = { version = "0.8.5", features = ["std_rng"], default-features = false }
scale-info = { workspace = true }
serde = { workspace = true }

frame-support = { workspace = true }
frame-system = { workspace = true }
pallet-authorship = { workspace = true }
pallet-session = { workspace = true }
sp-runtime = { workspace = true }
sp-staking = { workspace = true }
sp-std = { workspace = true }

frame-benchmarking = { workspace = true, optional = true }

[dev-dependencies]
pallet-aura = { workspace = true }
pallet-balances = { features = ["insecure_zero_ed"], workspace = true }
pallet-timestamp = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-tracing = { workspace = true }

[features]
default = ["std"]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
]
std = [
	"codec/std",
	"frame-benchmarking/std",
	"frame-support/std",
	"frame-system/std",
	"log/std",
	"pallet-authorship/std",
	"pallet-session/std",
	"rand/std",
	"scale-info/std",
	"sp-consensus-aura/std",
	"sp-runtime/std",
	"sp-staking/std",
	"sp-std/std",
	'pallet-aura/std',
	'pallet-balances/std',
]

try-runtime = ["frame-support/try-runtime"]
