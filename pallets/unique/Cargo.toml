################################################################################
# Package

[package]
authors = ['Unique Network <support@uniquenetwork.io>']
description = 'Unique Pallet'
edition = '2021'
homepage = 'https://unique.network'
license = 'GPLv3'
name = 'pallet-unique'
repository = 'https://github.com/UniqueNetwork/unique-chain'
version = "0.2.1"

[package.metadata.docs.rs]
targets = ['x86_64-unknown-linux-gnu']

[features]
default = ['std']
limit-testing = ["up-data-structs/limit-testing"]
runtime-benchmarks = ['frame-benchmarking', 'pallet-common/runtime-benchmarks']
std = [
	'codec/std',
	'evm-coder/std',
	'frame-benchmarking/std',
	'frame-support/std',
	'frame-system/std',
	'pallet-common/std',
	'pallet-evm-coder-substrate/std',
	'pallet-evm/std',
	'pallet-nonfungible/std',
	'sp-runtime/std',
	'sp-std/std',
	'up-data-structs/std',
]
stubgen = ["evm-coder/stubgen", "pallet-common/stubgen"]
try-runtime = ["frame-support/try-runtime"]

################################################################################
# Local Dependencies
[dependencies]
# Note: `package = "parity-scale-codec"` must be supplied since the `Encode` macro searches for it.
codec = { workspace = true, package = "parity-scale-codec" }

ethereum = { workspace = true }
evm-coder = { workspace = true }
frame-benchmarking = { workspace = true, optional = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
pallet-common = { workspace = true }
pallet-evm = { workspace = true }
pallet-evm-coder-substrate = { workspace = true }
pallet-nonfungible = { workspace = true }
pallet-refungible = { workspace = true }
pallet-fungible = { workspace = true }
scale-info = { workspace = true }
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-std = { workspace = true }
up-data-structs = { workspace = true }
