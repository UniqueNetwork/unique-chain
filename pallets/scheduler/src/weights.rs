// Template adopted from https://github.com/paritytech/substrate/blob/master/.maintain/frame-weight-template.hbs

//! Autogenerated weights for pallet_unique_scheduler
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-08-15, STEPS: `50`, REPEAT: 80, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// target/release/unique-collator
// benchmark
// pallet
// --pallet
// pallet-unique-scheduler
// --wasm-execution
// compiled
// --extrinsic
// *
// --template
// .maintain/frame-weight-template.hbs
// --steps=50
// --repeat=80
// --heap-pages=4096
// --output=./pallets/scheduler/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_unique_scheduler.
pub trait WeightInfo {
	fn on_initialize_periodic_named_resolved(s: u32, ) -> Weight;
	fn on_initialize_named_resolved(s: u32, ) -> Weight;
	fn on_initialize_periodic(s: u32, ) -> Weight;
	fn on_initialize_periodic_resolved(s: u32, ) -> Weight;
	fn on_initialize_aborted(s: u32, ) -> Weight;
	fn on_initialize_named_aborted(s: u32, ) -> Weight;
	fn on_initialize_named(s: u32, ) -> Weight;
	fn on_initialize(s: u32, ) -> Weight;
	fn on_initialize_resolved(s: u32, ) -> Weight;
	fn schedule_named(s: u32, ) -> Weight;
	fn cancel_named(s: u32, ) -> Weight;
}

/// Weights for pallet_unique_scheduler using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Scheduler Agenda (r:2 w:2)
	// Storage: System Account (r:1 w:1)
	// Storage: System AllExtrinsicsLen (r:1 w:1)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_periodic_named_resolved(s: u32, ) -> Weight {
		Weight::from_ref_time(26_641_000)
			// Standard Error: 9_000
			.saturating_add(Weight::from_ref_time(8_547_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(s as u64)))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
			.saturating_add(T::DbWeight::get().writes((2 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: System AllExtrinsicsLen (r:1 w:1)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_named_resolved(s: u32, ) -> Weight {
		Weight::from_ref_time(23_941_000)
			// Standard Error: 17_000
			.saturating_add(Weight::from_ref_time(5_282_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:2 w:2)
	// Storage: System Account (r:1 w:1)
	// Storage: System AllExtrinsicsLen (r:1 w:1)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_periodic(s: u32, ) -> Weight {
		Weight::from_ref_time(24_858_000)
			// Standard Error: 7_000
			.saturating_add(Weight::from_ref_time(8_657_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(s as u64)))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
			.saturating_add(T::DbWeight::get().writes((2 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:2 w:2)
	// Storage: System Account (r:1 w:1)
	// Storage: System AllExtrinsicsLen (r:1 w:1)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_periodic_resolved(s: u32, ) -> Weight {
		Weight::from_ref_time(25_515_000)
			// Standard Error: 14_000
			.saturating_add(Weight::from_ref_time(8_656_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(s as u64)))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
			.saturating_add(T::DbWeight::get().writes((2 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:2 w:2)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_aborted(s: u32, ) -> Weight {
		Weight::from_ref_time(7_584_000)
			// Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(2_065_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: System AllExtrinsicsLen (r:1 w:1)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_named_aborted(s: u32, ) -> Weight {
		Weight::from_ref_time(25_552_000)
			// Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(5_187_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:2 w:2)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_named(s: u32, ) -> Weight {
		Weight::from_ref_time(8_980_000)
			// Standard Error: 12_000
			.saturating_add(Weight::from_ref_time(2_050_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: System AllExtrinsicsLen (r:1 w:1)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize(s: u32, ) -> Weight {
		Weight::from_ref_time(24_482_000)
			// Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(5_249_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: System AllExtrinsicsLen (r:1 w:1)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_resolved(s: u32, ) -> Weight {
		Weight::from_ref_time(25_187_000)
			// Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(5_216_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:1 w:1)
	fn schedule_named(s: u32, ) -> Weight {
		Weight::from_ref_time(17_316_000)
			// Standard Error: 3_000
			.saturating_add(Weight::from_ref_time(82_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:1 w:1)
	fn cancel_named(s: u32, ) -> Weight {
		Weight::from_ref_time(15_652_000)
			// Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(436_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: Scheduler Agenda (r:2 w:2)
	// Storage: System Account (r:1 w:1)
	// Storage: System AllExtrinsicsLen (r:1 w:1)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_periodic_named_resolved(s: u32, ) -> Weight {
		Weight::from_ref_time(26_641_000)
			// Standard Error: 9_000
			.saturating_add(Weight::from_ref_time(8_547_000).saturating_mul(s as u64))
			.saturating_add(RocksDbWeight::get().reads(4 as u64))
			.saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(s as u64)))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
			.saturating_add(RocksDbWeight::get().writes((2 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: System AllExtrinsicsLen (r:1 w:1)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_named_resolved(s: u32, ) -> Weight {
		Weight::from_ref_time(23_941_000)
			// Standard Error: 17_000
			.saturating_add(Weight::from_ref_time(5_282_000).saturating_mul(s as u64))
			.saturating_add(RocksDbWeight::get().reads(4 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
			.saturating_add(RocksDbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:2 w:2)
	// Storage: System Account (r:1 w:1)
	// Storage: System AllExtrinsicsLen (r:1 w:1)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_periodic(s: u32, ) -> Weight {
		Weight::from_ref_time(24_858_000)
			// Standard Error: 7_000
			.saturating_add(Weight::from_ref_time(8_657_000).saturating_mul(s as u64))
			.saturating_add(RocksDbWeight::get().reads(4 as u64))
			.saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(s as u64)))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
			.saturating_add(RocksDbWeight::get().writes((2 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:2 w:2)
	// Storage: System Account (r:1 w:1)
	// Storage: System AllExtrinsicsLen (r:1 w:1)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_periodic_resolved(s: u32, ) -> Weight {
		Weight::from_ref_time(25_515_000)
			// Standard Error: 14_000
			.saturating_add(Weight::from_ref_time(8_656_000).saturating_mul(s as u64))
			.saturating_add(RocksDbWeight::get().reads(4 as u64))
			.saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(s as u64)))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
			.saturating_add(RocksDbWeight::get().writes((2 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:2 w:2)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_aborted(s: u32, ) -> Weight {
		Weight::from_ref_time(7_584_000)
			// Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(2_065_000).saturating_mul(s as u64))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
			.saturating_add(RocksDbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: System AllExtrinsicsLen (r:1 w:1)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_named_aborted(s: u32, ) -> Weight {
		Weight::from_ref_time(25_552_000)
			// Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(5_187_000).saturating_mul(s as u64))
			.saturating_add(RocksDbWeight::get().reads(4 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
			.saturating_add(RocksDbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:2 w:2)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_named(s: u32, ) -> Weight {
		Weight::from_ref_time(8_980_000)
			// Standard Error: 12_000
			.saturating_add(Weight::from_ref_time(2_050_000).saturating_mul(s as u64))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
			.saturating_add(RocksDbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: System AllExtrinsicsLen (r:1 w:1)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize(s: u32, ) -> Weight {
		Weight::from_ref_time(24_482_000)
			// Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(5_249_000).saturating_mul(s as u64))
			.saturating_add(RocksDbWeight::get().reads(4 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
			.saturating_add(RocksDbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Agenda (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: System AllExtrinsicsLen (r:1 w:1)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Scheduler Lookup (r:0 w:1)
	fn on_initialize_resolved(s: u32, ) -> Weight {
		Weight::from_ref_time(25_187_000)
			// Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(5_216_000).saturating_mul(s as u64))
			.saturating_add(RocksDbWeight::get().reads(4 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
			.saturating_add(RocksDbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:1 w:1)
	fn schedule_named(s: u32, ) -> Weight {
		Weight::from_ref_time(17_316_000)
			// Standard Error: 3_000
			.saturating_add(Weight::from_ref_time(82_000).saturating_mul(s as u64))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
	}
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:1 w:1)
	fn cancel_named(s: u32, ) -> Weight {
		Weight::from_ref_time(15_652_000)
			// Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(436_000).saturating_mul(s as u64))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
	}
}
