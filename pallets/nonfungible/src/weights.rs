// Template adopted from https://github.com/paritytech/substrate/blob/master/.maintain/frame-weight-template.hbs

//! Autogenerated weights for pallet_nonfungible
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-08-15, STEPS: `50`, REPEAT: 80, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// target/release/unique-collator
// benchmark
// pallet
// --pallet
// pallet-nonfungible
// --wasm-execution
// compiled
// --extrinsic
// *
// --template
// .maintain/frame-weight-template.hbs
// --steps=50
// --repeat=80
// --heap-pages=4096
// --output=./pallets/nonfungible/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_nonfungible.
pub trait WeightInfo {
	fn create_item() -> Weight;
	fn create_multiple_items(b: u32, ) -> Weight;
	fn create_multiple_items_ex(b: u32, ) -> Weight;
	fn burn_item() -> Weight;
	fn burn_recursively_self_raw() -> Weight;
	fn burn_recursively_breadth_plus_self_plus_self_per_each_raw(b: u32, ) -> Weight;
	fn transfer() -> Weight;
	fn approve() -> Weight;
	fn transfer_from() -> Weight;
	fn burn_from() -> Weight;
	fn set_token_property_permissions(b: u32, ) -> Weight;
	fn set_token_properties(b: u32, ) -> Weight;
	fn delete_token_properties(b: u32, ) -> Weight;
	fn token_owner() -> Weight;
	fn set_approval_for_all() -> Weight;
	fn is_approved_for_all() -> Weight;
}

/// Weights for pallet_nonfungible using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Nonfungible TokensMinted (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:1 w:1)
	// Storage: Nonfungible TokenData (r:0 w:1)
	// Storage: Nonfungible Owned (r:0 w:1)
	fn create_item() -> Weight {
		Weight::from_ref_time(25_905_000)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: Nonfungible TokensMinted (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:1 w:1)
	// Storage: Nonfungible TokenData (r:0 w:4)
	// Storage: Nonfungible Owned (r:0 w:4)
	fn create_multiple_items(b: u32, ) -> Weight {
		Weight::from_ref_time(24_955_000)
			// Standard Error: 3_000
			.saturating_add(Weight::from_ref_time(5_340_000).saturating_mul(b as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
			.saturating_add(T::DbWeight::get().writes((2 as u64).saturating_mul(b as u64)))
	}
	// Storage: Nonfungible TokensMinted (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:4 w:4)
	// Storage: Nonfungible TokenData (r:0 w:4)
	// Storage: Nonfungible Owned (r:0 w:4)
	fn create_multiple_items_ex(b: u32, ) -> Weight {
		Weight::from_ref_time(13_666_000)
			// Standard Error: 5_000
			.saturating_add(Weight::from_ref_time(8_299_000).saturating_mul(b as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(b as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((3 as u64).saturating_mul(b as u64)))
	}
	// Storage: Nonfungible TokenData (r:1 w:1)
	// Storage: Nonfungible TokenChildren (r:1 w:0)
	// Storage: Nonfungible TokensBurnt (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:1 w:1)
	// Storage: Nonfungible Allowance (r:1 w:0)
	// Storage: Nonfungible Owned (r:0 w:1)
	// Storage: Nonfungible TokenProperties (r:0 w:1)
	fn burn_item() -> Weight {
		Weight::from_ref_time(36_205_000)
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}
	// Storage: Nonfungible TokenChildren (r:1 w:0)
	// Storage: Nonfungible TokenData (r:1 w:1)
	// Storage: Nonfungible TokensBurnt (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:1 w:1)
	// Storage: Nonfungible Allowance (r:1 w:0)
	// Storage: Nonfungible Owned (r:0 w:1)
	// Storage: Nonfungible TokenProperties (r:0 w:1)
	fn burn_recursively_self_raw() -> Weight {
		Weight::from_ref_time(44_550_000)
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}
	// Storage: Nonfungible TokenChildren (r:1 w:0)
	// Storage: Nonfungible TokenData (r:1 w:1)
	// Storage: Nonfungible TokensBurnt (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:1 w:1)
	// Storage: Nonfungible Allowance (r:1 w:0)
	// Storage: Nonfungible Owned (r:0 w:1)
	// Storage: Nonfungible TokenProperties (r:0 w:1)
	// Storage: Common CollectionById (r:1 w:0)
	fn burn_recursively_breadth_plus_self_plus_self_per_each_raw(b: u32, ) -> Weight {
		(Weight::from_ref_time(0))
			// Standard Error: 1_536_000
			.saturating_add(Weight::from_ref_time(312_125_000).saturating_mul(b as u64))
			.saturating_add(T::DbWeight::get().reads(7 as u64))
			.saturating_add(T::DbWeight::get().reads((4 as u64).saturating_mul(b as u64)))
			.saturating_add(T::DbWeight::get().writes(6 as u64))
			.saturating_add(T::DbWeight::get().writes((4 as u64).saturating_mul(b as u64)))
	}
	// Storage: Nonfungible TokenData (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:2 w:2)
	// Storage: Nonfungible Allowance (r:1 w:0)
	// Storage: Nonfungible Owned (r:0 w:2)
	fn transfer() -> Weight {
		Weight::from_ref_time(31_116_000)
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}
	// Storage: Nonfungible TokenData (r:1 w:0)
	// Storage: Nonfungible Allowance (r:1 w:1)
	fn approve() -> Weight {
		Weight::from_ref_time(20_802_000)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Nonfungible Allowance (r:1 w:1)
	// Storage: Nonfungible TokenData (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:2 w:2)
	// Storage: Nonfungible Owned (r:0 w:2)
	fn transfer_from() -> Weight {
		Weight::from_ref_time(36_083_000)
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(6 as u64))
	}
	// Storage: Nonfungible Allowance (r:1 w:1)
	// Storage: Nonfungible TokenData (r:1 w:1)
	// Storage: Nonfungible TokenChildren (r:1 w:0)
	// Storage: Nonfungible TokensBurnt (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:1 w:1)
	// Storage: Nonfungible Owned (r:0 w:1)
	// Storage: Nonfungible TokenProperties (r:0 w:1)
	fn burn_from() -> Weight {
		Weight::from_ref_time(41_781_000)
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().writes(6 as u64))
	}
	// Storage: Common CollectionPropertyPermissions (r:1 w:1)
	fn set_token_property_permissions(b: u32, ) -> Weight {
		(Weight::from_ref_time(0))
			// Standard Error: 58_000
			.saturating_add(Weight::from_ref_time(15_705_000).saturating_mul(b as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Common CollectionPropertyPermissions (r:1 w:0)
	// Storage: Nonfungible TokenProperties (r:1 w:1)
	fn set_token_properties(b: u32, ) -> Weight {
		(Weight::from_ref_time(0))
			// Standard Error: 3_595_000
			.saturating_add(Weight::from_ref_time(590_344_000).saturating_mul(b as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Common CollectionPropertyPermissions (r:1 w:0)
	// Storage: Nonfungible TokenProperties (r:1 w:1)
	fn delete_token_properties(b: u32, ) -> Weight {
		(Weight::from_ref_time(0))
			// Standard Error: 3_664_000
			.saturating_add(Weight::from_ref_time(605_836_000).saturating_mul(b as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Nonfungible TokenData (r:1 w:0)
	fn token_owner() -> Weight {
		Weight::from_ref_time(4_366_000)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
	}
	// Storage: Nonfungible WalletOperator (r:0 w:1)
	fn set_approval_for_all() -> Weight {
		Weight::from_ref_time(16_231_000 as u64)
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Nonfungible WalletOperator (r:1 w:0)
	fn is_approved_for_all() -> Weight {
		Weight::from_ref_time(6_161_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: Nonfungible TokensMinted (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:1 w:1)
	// Storage: Nonfungible TokenData (r:0 w:1)
	// Storage: Nonfungible Owned (r:0 w:1)
	fn create_item() -> Weight {
		Weight::from_ref_time(25_905_000)
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
	}
	// Storage: Nonfungible TokensMinted (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:1 w:1)
	// Storage: Nonfungible TokenData (r:0 w:4)
	// Storage: Nonfungible Owned (r:0 w:4)
	fn create_multiple_items(b: u32, ) -> Weight {
		Weight::from_ref_time(24_955_000)
			// Standard Error: 3_000
			.saturating_add(Weight::from_ref_time(5_340_000).saturating_mul(b as u64))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
			.saturating_add(RocksDbWeight::get().writes((2 as u64).saturating_mul(b as u64)))
	}
	// Storage: Nonfungible TokensMinted (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:4 w:4)
	// Storage: Nonfungible TokenData (r:0 w:4)
	// Storage: Nonfungible Owned (r:0 w:4)
	fn create_multiple_items_ex(b: u32, ) -> Weight {
		Weight::from_ref_time(13_666_000)
			// Standard Error: 5_000
			.saturating_add(Weight::from_ref_time(8_299_000).saturating_mul(b as u64))
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
			.saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(b as u64)))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
			.saturating_add(RocksDbWeight::get().writes((3 as u64).saturating_mul(b as u64)))
	}
	// Storage: Nonfungible TokenData (r:1 w:1)
	// Storage: Nonfungible TokenChildren (r:1 w:0)
	// Storage: Nonfungible TokensBurnt (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:1 w:1)
	// Storage: Nonfungible Allowance (r:1 w:0)
	// Storage: Nonfungible Owned (r:0 w:1)
	// Storage: Nonfungible TokenProperties (r:0 w:1)
	fn burn_item() -> Weight {
		Weight::from_ref_time(36_205_000)
			.saturating_add(RocksDbWeight::get().reads(5 as u64))
			.saturating_add(RocksDbWeight::get().writes(5 as u64))
	}
	// Storage: Nonfungible TokenChildren (r:1 w:0)
	// Storage: Nonfungible TokenData (r:1 w:1)
	// Storage: Nonfungible TokensBurnt (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:1 w:1)
	// Storage: Nonfungible Allowance (r:1 w:0)
	// Storage: Nonfungible Owned (r:0 w:1)
	// Storage: Nonfungible TokenProperties (r:0 w:1)
	fn burn_recursively_self_raw() -> Weight {
		Weight::from_ref_time(44_550_000)
			.saturating_add(RocksDbWeight::get().reads(5 as u64))
			.saturating_add(RocksDbWeight::get().writes(5 as u64))
	}
	// Storage: Nonfungible TokenChildren (r:1 w:0)
	// Storage: Nonfungible TokenData (r:1 w:1)
	// Storage: Nonfungible TokensBurnt (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:1 w:1)
	// Storage: Nonfungible Allowance (r:1 w:0)
	// Storage: Nonfungible Owned (r:0 w:1)
	// Storage: Nonfungible TokenProperties (r:0 w:1)
	// Storage: Common CollectionById (r:1 w:0)
	fn burn_recursively_breadth_plus_self_plus_self_per_each_raw(b: u32, ) -> Weight {
		(Weight::from_ref_time(0))
			// Standard Error: 1_536_000
			.saturating_add(Weight::from_ref_time(312_125_000).saturating_mul(b as u64))
			.saturating_add(RocksDbWeight::get().reads(7 as u64))
			.saturating_add(RocksDbWeight::get().reads((4 as u64).saturating_mul(b as u64)))
			.saturating_add(RocksDbWeight::get().writes(6 as u64))
			.saturating_add(RocksDbWeight::get().writes((4 as u64).saturating_mul(b as u64)))
	}
	// Storage: Nonfungible TokenData (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:2 w:2)
	// Storage: Nonfungible Allowance (r:1 w:0)
	// Storage: Nonfungible Owned (r:0 w:2)
	fn transfer() -> Weight {
		Weight::from_ref_time(31_116_000)
			.saturating_add(RocksDbWeight::get().reads(4 as u64))
			.saturating_add(RocksDbWeight::get().writes(5 as u64))
	}
	// Storage: Nonfungible TokenData (r:1 w:0)
	// Storage: Nonfungible Allowance (r:1 w:1)
	fn approve() -> Weight {
		Weight::from_ref_time(20_802_000)
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: Nonfungible Allowance (r:1 w:1)
	// Storage: Nonfungible TokenData (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:2 w:2)
	// Storage: Nonfungible Owned (r:0 w:2)
	fn transfer_from() -> Weight {
		Weight::from_ref_time(36_083_000)
			.saturating_add(RocksDbWeight::get().reads(4 as u64))
			.saturating_add(RocksDbWeight::get().writes(6 as u64))
	}
	// Storage: Nonfungible Allowance (r:1 w:1)
	// Storage: Nonfungible TokenData (r:1 w:1)
	// Storage: Nonfungible TokenChildren (r:1 w:0)
	// Storage: Nonfungible TokensBurnt (r:1 w:1)
	// Storage: Nonfungible AccountBalance (r:1 w:1)
	// Storage: Nonfungible Owned (r:0 w:1)
	// Storage: Nonfungible TokenProperties (r:0 w:1)
	fn burn_from() -> Weight {
		Weight::from_ref_time(41_781_000)
			.saturating_add(RocksDbWeight::get().reads(5 as u64))
			.saturating_add(RocksDbWeight::get().writes(6 as u64))
	}
	// Storage: Common CollectionPropertyPermissions (r:1 w:1)
	fn set_token_property_permissions(b: u32, ) -> Weight {
		(Weight::from_ref_time(0))
			// Standard Error: 58_000
			.saturating_add(Weight::from_ref_time(15_705_000).saturating_mul(b as u64))
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: Common CollectionPropertyPermissions (r:1 w:0)
	// Storage: Nonfungible TokenProperties (r:1 w:1)
	fn set_token_properties(b: u32, ) -> Weight {
		(Weight::from_ref_time(0))
			// Standard Error: 3_595_000
			.saturating_add(Weight::from_ref_time(590_344_000).saturating_mul(b as u64))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: Common CollectionPropertyPermissions (r:1 w:0)
	// Storage: Nonfungible TokenProperties (r:1 w:1)
	fn delete_token_properties(b: u32, ) -> Weight {
		(Weight::from_ref_time(0))
			// Standard Error: 3_664_000
			.saturating_add(Weight::from_ref_time(605_836_000).saturating_mul(b as u64))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: Nonfungible TokenData (r:1 w:0)
	fn token_owner() -> Weight {
		Weight::from_ref_time(4_366_000)
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
	}
	// Storage: Nonfungible WalletOperator (r:0 w:1)
	fn set_approval_for_all() -> Weight {
		Weight::from_ref_time(16_231_000 as u64)
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: Nonfungible WalletOperator (r:1 w:0)
	fn is_approved_for_all() -> Weight {
		Weight::from_ref_time(6_161_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
	}
}
