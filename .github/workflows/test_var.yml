# https://cryptousetech.atlassian.net/wiki/spaces/CI/pages/2586837021/Forkless+update+without+data
# Forkless update without data replication

# Triger: only call from main workflow(re-usable workflows)
on:
  workflow_call:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  execution-marix:

    name: Prepare execution matrix

    runs-on: self-hosted-ci
    outputs:
      matrix: ${{ steps.create_matrix.outputs.matrix }}

    steps:

      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}  #Checking out head commit

      - name: Read .env file
        uses: xom9ikk/dotenv@v2

      - name: Create Execution matrix
        uses: CertainLach/create-matrix-action@v3
        id: create_matrix
        with:
          matrix: |
            network {opal}, runtime {opal}, features {opal-runtime}, mainnet_branch {${{ env.OPAL_MAINNET_TAG }}}
            network {quartz}, runtime {quartz}, features {quartz-runtime}, mainnet_branch {${{ env.QUARTZ_MAINNET_TAG }}}
            network {unique}, runtime {unique}, features {unique-runtime}, mainnet_branch {${{ env.UNIQUE_MAINNET_TAG }}}


  forkless-update-nodata:
    needs: execution-marix
    # The type of runner that the job will run on
    runs-on: [self-hosted-ci,large]

    timeout-minutes: 1380

    name: ${{ matrix.network }}-nodata

    continue-on-error: true         #Do not stop testing of matrix runs failed.  As it decided during PR review - it required 50/50& Let's check it with false.

    strategy:
      matrix:
        include: ${{fromJson(needs.execution-marix.outputs.matrix)}}    

    steps:
      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}  #Checking out head commit

      - name: Read .env file
        uses: xom9ikk/dotenv@v2

      - name: Generate ENV related extend file for docker-compose
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: .docker/docker-compose.tmp-forkless-nodata.j2
          output_file: .docker/docker-compose.${{ matrix.network }}.yml
          variables: |
            REPO_URL=${{ github.server_url }}/${{ github.repository }}.git
            RUST_TOOLCHAIN=${{ env.RUST_TOOLCHAIN }}
            POLKADOT_BUILD_BRANCH=${{ env.POLKADOT_BUILD_BRANCH }}
            POLKADOT_MAINNET_BRANCH=${{ env.POLKADOT_MAINNET_BRANCH }}
            MAINNET_TAG=${{ matrix.mainnet_tag }}
            MAINNET_BRANCH=${{ matrix.mainnet_branch }}
            FEATURE=${{ matrix.features }}
            RUNTIME=${{ matrix.runtime }}
            BRANCH=${{ github.head_ref }}

      - name: Show build configuration
        run: cat .docker/docker-compose.${{ matrix.network }}.yml

      - name: Build the stack
        run: docker-compose -f ".docker/docker-compose-forkless.yml" -f ".docker/docker-compose.${{ matrix.network }}.yml" up -d --build  --force-recreate --timeout 300

      - name: Remove builder cache
        if: always()                   # run this step always
        run: |
          docker system prune -a -f        
