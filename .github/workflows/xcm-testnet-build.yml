name: xcm-testnet-build

# Controls when the action will run.
on:
  workflow_call:
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

#Define Workflow variables
env:
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  prepare-execution-marix:

    name: Prepare execution matrix

    runs-on: [XL]
    outputs:
      matrix: ${{ steps.create_matrix.outputs.matrix }}

    steps:

      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}  #Checking out head commit

      - name: Read .env file
        uses: xom9ikk/dotenv@v1.0.2

      - name: Create Execution matrix
        uses: fabiocaccamo/create-matrix-action@v2
        id: create_matrix
        with:
          matrix: |
            network {opal}, runtime {opal}, features {opal-runtime}, acala_version {${{ env.ACALA_BUILD_BRANCH }}}, moonbeam_version {${{ env.MOONBEAM_BUILD_BRANCH }}}, cumulus_version {${{ env.WESTMINT_BUILD_BRANCH }}}
            network {quartz}, runtime {quartz}, features {quartz-runtime}, acala_version {${{ env.KARURA_BUILD_BRANCH }}}, moonbeam_version {${{ env.MOONRIVER_BUILD_BRANCH }}}, cumulus_version {${{ env.STATEMINE_BUILD_BRANCH }}}
            network {unique}, runtime {unique}, features {unique-runtime}, acala_version {${{ env.ACALA_BUILD_BRANCH }}}, moonbeam_version {${{ env.MOONBEAM_BUILD_BRANCH }}}, cumulus_version {${{ env.STATEMINT_BUILD_BRANCH }}}

  xcm-build:
    
    needs: prepare-execution-marix
    # The type of runner that the job will run on
    runs-on: [XL]

    timeout-minutes: 600

    name: ${{ matrix.network }}

    continue-on-error: true         #Do not stop testing of matrix runs failed.  As it decided during PR review - it required 50/50& Let's check it with false.

    strategy:
      matrix:
        include: ${{fromJson(needs.prepare-execution-marix.outputs.matrix)}}

    steps:
      - name: Skip if pull request is in Draft
        if: github.event.pull_request.draft == true
        run: exit 1

      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}  #Checking out head commit

      - name: Read .env file
        uses: xom9ikk/dotenv@v1.0.2

      - name: Generate ENV related extend Dockerfile file
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: .docker/Dockerfile-xcm.j2
          output_file: .docker/Dockerfile-xcm.${{ matrix.network }}.yml
          variables: |
            RUST_TOOLCHAIN=${{ env.RUST_TOOLCHAIN }}
            NETWORK=${{ matrix.network }}
            POLKADOT_BUILD_BRANCH=${{ env.POLKADOT_BUILD_BRANCH }}
            POLKADOT_LAUNCH_BRANCH=${{ env.POLKADOT_LAUNCH_BRANCH }}
            FEATURE=${{ matrix.features }}
            RUNTIME=${{ matrix.runtime }}
            BRANCH=${{ github.head_ref }}
            ACALA_BUILD_BRANCH=${{ matrix.acala_version }}
            MOONBEAM_BUILD_BRANCH=${{ matrix.moonbeam_version }}
            CUMULUS_BUILD_BRANCH=${{ matrix.cumulus_version }}

      - name: Show build Dockerfile
        run: cat .docker/Dockerfile-xcm.${{ matrix.network }}.yml

      - name: Show launch-config-xcm-${{ matrix.network }} configuration
        run: cat .docker/xcm-config/launch-config-xcm-${{ matrix.network }}.json

      - name: Run find-and-replace to remove slashes from branch name
        uses: mad9000/actions-find-and-replace-string@2
        id: branchname
        with:
          source: ${{ github.head_ref }}
          find: '/'
          replace: '-'

      - name: Log in to Docker Hub
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.CORE_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CORE_DOCKERHUB_TOKEN }}

      - name: Pull acala docker image
        run: docker pull uniquenetwork/builder-acala:${{ matrix.acala_version }}

      - name: Pull moonbeam docker image
        run: docker pull uniquenetwork/builder-moonbeam:${{ matrix.moonbeam_version }}

      - name: Pull cumulus docker image
        run: docker pull uniquenetwork/builder-cumulus:${{ matrix.cumulus_version }}

      - name: Pull polkadot docker image
        run: docker pull uniquenetwork/builder-polkadot:${{ env.POLKADOT_BUILD_BRANCH }}

      - name: Pull chainql docker image
        run: docker pull uniquenetwork/builder-chainql:latest

      - name: Build the stack
        run: cd .docker/ && docker build --no-cache --file ./Dockerfile-xcm.${{ matrix.network }}.yml --tag uniquenetwork/xcm-${{ matrix.network }}-testnet-local:nightly-${{ steps.branchname.outputs.value }}-${{ github.sha }} --tag uniquenetwork/xcm-${{ matrix.network }}-testnet-local:latest .

      - name: Push docker image version
        run: docker push uniquenetwork/xcm-${{ matrix.network }}-testnet-local:nightly-${{ steps.branchname.outputs.value }}-${{ github.sha }}

      - name: Push docker image latest
        run: docker push uniquenetwork/xcm-${{ matrix.network }}-testnet-local:latest

      - name: Clean Workspace
        if: always()
        uses: AutoModality/action-clean@v1.1.0

      - name: Remove builder cache
        if: always()                   # run this step always
        run: |
          docker builder prune -f
          docker system prune -f



