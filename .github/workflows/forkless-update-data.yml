# Forkless update with data replication
# https://cryptousetech.atlassian.net/wiki/spaces/CI/pages/2586869792/Forkless+update+with+data

# Triger: only call from main workflow(re-usable workflows)
on:
  workflow_call:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  execution-marix:

    name: Prepare execution matrix

    runs-on: self-hosted-ci
    outputs:
      matrix: ${{ steps.create_matrix.outputs.matrix }}

    steps:

      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3.1.0
        with:
          ref: ${{ github.head_ref }}  #Checking out head commit

      - name: Read .env file
        uses: xom9ikk/dotenv@v2

      - name: Create Execution matrix
        uses: CertainLach/create-matrix-action@v4
        id: create_matrix
        with:
          matrix: |
            network {quartz}, wasm_name {quartz}, mainnet_branch {${{ env.QUARTZ_MAINNET_BRANCH }}}, replica_from_address {${{ env.QUARTZ_REPLICA_FROM }}}, relay_branch {${{ env.KUSAMA_MAINNET_BRANCH }}}
            network {unique}, wasm_name {unique}, mainnet_branch {${{ env.UNIQUE_MAINNET_BRANCH }}}, replica_from_address {${{ env.UNIQUE_REPLICA_FROM }}}, relay_branch {${{ env.POLKADOT_MAINNET_BRANCH }}}
            network {opal}, wasm_name {opal}, mainnet_branch {${{ env.OPAL_MAINNET_BRANCH }}}, replica_from_address {${{ env.OPAL_REPLICA_FROM }}}, relay_branch {${{ env.UNIQUEWEST_MAINNET_BRANCH }}}
            network {sapphire}, wasm_name {quartz}, mainnet_branch {${{ env.SAPPHIRE_MAINNET_BRANCH }}}, replica_from_address {${{ env.SAPPHIRE_REPLICA_FROM }}}, relay_branch {${{ env.UNIQUEEAST_MAINNET_BRANCH }}}

  forkless-update-data:
    needs: execution-marix
    # The type of runner that the job will run on
    runs-on: [self-hosted-ci,large]
    timeout-minutes: 1380

    name: ${{ matrix.network }}-data
    strategy:
      matrix:
        include: ${{fromJson(needs.execution-marix.outputs.matrix)}}

    continue-on-error: false         #Do not stop testing of matrix runs failed.  As it decided during PR review - it required 50/50& Let's check it with false.

    steps:
      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3.1.0
        with:
          ref: ${{ github.head_ref }}  #Checking out head commit

      - name: Read .env file
        uses: xom9ikk/dotenv@v2

      - name: Generate ENV related extend file for docker-compose
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: .docker/docker-compose.tmp-forkless-data.j2
          output_file: .docker/docker-compose-forkless-data.${{ matrix.network }}.yml
          variables: |
            REPO_URL=${{ github.server_url }}/${{ github.repository }}.git
            RUST_TOOLCHAIN=${{ env.RUST_TOOLCHAIN }}
            POLKADOT_BUILD_BRANCH=${{ matrix.relay_branch }}
            POLKADOT_LAUNCH_BRANCH=${{ env.POLKADOT_LAUNCH_BRANCH }}
            # POLKADOT_MAINNET_BRANCH=${{ env.POLKADOT_MAINNET_BRANCH }}
            # MAINNET_TAG=${{ matrix.mainnet_tag }}
            MAINNET_BRANCH=${{ matrix.mainnet_branch }}
            NETWORK=${{ matrix.network }}
            # BRANCH=${{ github.head_ref }}
            REPLICA_FROM=${{ matrix.replica_from_address }}
            WASM_NAME=${{ matrix.wasm_name }}

      - name: Show build configuration
        run: cat .docker/docker-compose-forkless-data.${{ matrix.network }}.yml

      - name: Generate launch-config-forkless-data.json
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: .docker/forkless-config/launch-config-forkless-data.j2
          output_file: .docker/launch-config-forkless-data.json
          variables: |
            NETWORK=${{ matrix.network }}
            REPLICA_FROM=${{ matrix.replica_from_address }}
            WASM_NAME=${{ matrix.wasm_name}}
            RELAY_CHAIN_TYPE=${{ env.RELAY_CHAIN_TYPE }}

      - name: Show launch-config-forkless configuration
        run: cat .docker/launch-config-forkless-data.json

      - name: Build the stack
        run: docker-compose -f ".docker/docker-compose-forkless-data.${{ matrix.network }}.yml" up -d --build  --force-recreate --timeout 300

      - name: Check if docker logs consist logs related to Runtime Upgrade testing.
        if: success()
        run: |
          counter=160
          function check_container_status {
                docker inspect -f {{.State.Running}} node-parachain
          }
          function do_docker_logs {
                docker logs --details node-parachain  2>&1
          }
          function is_started {
                if [ "$(check_container_status)" == "true" ]; then
                        echo "Container: node-parachain RUNNING";
                        echo "Check Docker logs"
                        DOCKER_LOGS=$(do_docker_logs)
                        if [[ ${DOCKER_LOGS} = *"ðŸ›¸ PARACHAINS' RUNTIME UPGRADE TESTING COMPLETE ðŸ›¸"* ]];then
                                echo "ðŸ›¸ PARACHAINS' RUNTIME UPGRADE TESTING COMPLETE ðŸ›¸"
                                return 0
                        elif [[ ${DOCKER_LOGS} = *"ðŸš§ PARACHAINS' RUNTIME UPGRADE TESTING FAILED ðŸš§"* ]];then
                                echo "ðŸš§ PARACHAINS' RUNTIME UPGRADE TESTING FAILED ðŸš§"
                                return 1
                        else
                                echo "Message not found in logs output, repeating..."
                                return 1
                        fi
                else
                        echo "Container node-parachain not RUNNING"
                        echo "Halting all future checks"
                        exit 1
                fi
          exit 0
          }
          while ! is_started; do
                echo "Waiting for special message in log files "
                sleep 30s
                counter=$(( $counter - 1 ))
                echo "Counter: $counter"
                if [ "$counter" -gt "0" ]; then
                         continue
                else
                         break
                fi
          done
          echo "Halting script"
          exit 0
        shell: bash

      - name: Collect Docker Logs
        if: success() || failure()
        uses: jwalton/gh-docker-logs@v2.2.1
        with:
          dest: './forkless-parachain-upgrade-data-logs.${{ matrix.features }}'
          images: 'node-parachain'

      - name: Show Docker logs
        if: success() || failure()
        run: cat './forkless-parachain-upgrade-data-logs.${{ matrix.features }}/node-parachain.log'

      - name: Stop running containers
        if: always()                   # run this step always
        run: docker-compose -f ".docker/docker-compose-forkless-data.${{ matrix.network }}.yml" down --volumes

      - name: Remove builder cache
        if: always()                   # run this step always
        run: |
          docker builder prune -f -a
          docker system prune -f
          docker image prune -f -a
