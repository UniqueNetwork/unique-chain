name: xcm-testnet-build

# Controls when the action will run.
on:
  workflow_call:
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

#Define Workflow variables
env:
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  xcm-build:
    
    # The type of runner that the job will run on
    runs-on: [self-hosted]

    timeout-minutes: 600

    name: ${{ matrix.network }}

    continue-on-error: true         #Do not stop testing of matrix runs failed.  As it decided during PR review - it required 50/50& Let's check it with false.

    strategy:
      matrix:
        include:
          - network: opal
            runtime: opal
            features: opal-runtime
            acala_version: ${{ env.ACALA_BUILD_BRANCH }}
            moonbeam_version: ${{ env.MOONBEAM_BUILD_BRANCH }}
            cumulus_version: ${{ env.WESTMINT_BUILD_BRANCH }}
            runtest: testXcmOpal
          - network: quartz
            runtime: quartz
            features: quartz-runtime
            acala_version: ${{ env.KARURA_BUILD_BRANCH }}
            moonbeam_version: ${{ env.MOONRIVER_BUILD_BRANCH }}
            cumulus_version: ${{ env.STATEMINE_BUILD_BRANCH }}
            runtest: testXcmQuartz


    steps:
      - name: Skip if pull request is in Draft
        if: github.event.pull_request.draft == true
        run: exit 1

      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}  #Checking out head commit

      - name: Read .env file
        uses: xom9ikk/dotenv@v1.0.2

      - name: echo 2 step env
        run: |
          echo "acala_version=${{ matrix.acala_version }}"
          echo "moonbeam_version="${{ matrix.moonbeam_version }}
          echo "cumulus_version="${{ matrix.cumulus_version }}

      # Check ACALA version and build it if it doesn't exist in repository
      - name: Generate ENV related extend Dockerfile file for ACALA
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: .docker/Dockerfile-acala.j2
          output_file: .docker/Dockerfile-acala.${{ matrix.acala_version }}.yml
          variables: |
            RUST_TOOLCHAIN=${{ env.RUST_TOOLCHAIN }}
            ACALA_BUILD_BRANCH=${{ matrix.acala_version }}

      - name: Show Dockerfile-acala
        run: cat .docker/Dockerfile-acala.${{ matrix.acala_version }}.yml

