name: Build & test

# Controls when the action will run.
on:
 # Triggers the workflow on push or pull request events but only for the master branch
  #push:
  #  branches: [ develop ]
  pull_request:
    types:
      - closed
    branches: [ develop ]
 # pull_request:
 #   branches: [ develop ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

#Define Workflow variables
env:
  ubuntu_version: focal
  chains_release_dir: /opt/chains_release
  opal_chain_workdir: /opt/src_opal_chain
  quartz_chain_workdir: /opt/src_quartz_chain
  unique_chain_workdir: /opt/src_unique_chain
  src_repo_url: https://github.com/lzadjsf/unique-chain.git
  version: v924010
  actual_toolchain: nightly-2022-05-11

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  pre-requisites:
    # The type of runner that the job will run on
    runs-on: ci-01
    steps:
      #runs ssh connection
      - name: Install dependencies
        run: |
          sudo apt-get install git curl libssl-dev llvm pkg-config libclang-dev clang make cmake
          sudo apt autoremove
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain none
          . $HOME/.cargo/env && cargo install --locked --git https://github.com/chevdor/subwasm
          rustup toolchain install nightly-2022-05-11
          rustup default nightly-2022-05-11
          rustup target add wasm32-unknown-unknown --toolchain nightly-2022-05-11


      # Re-create release directory
      - name: delete release dir
        run: rm -rf ${{ env.chains_release_dir }}


      - name: create release dir
        run: mkdir -p ${{ env.chains_release_dir }}


  build-Opal:
    # The type of runner that the job will run on
    runs-on: ci-01

    needs: pre-requisites
    name: Build Opal

    steps:
      - name: delete workdir
        run: rm -rf ${{ env.opal_chain_workdir }}


      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          #repository: ${{ src_repo_url }}
          path: ${{ env.opal_chain_workdir }}


      - name: Building code Opal
        run: |
          pwd
          . $HOME/.cargo/env && cargo build --release

      - name: Upload Opal Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Opal-artifacts
          path: |
            ./target/release/unique-collator
            ./target/release/wbuild/opal-runtime/opal_runtime.compact.compressed.wasm

  build-Quartz:
    # The type of runner that the job will run on
    runs-on: ci-01
  
    needs: pre-requisites
    name: Build Quartz
  
    steps:
      - name: delete workdir
        run: rm -rf ${{ env.quartz_chain_workdir }}
  
  
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          #repository: ${{ src_repo_url }}
          path: ${{ env.quartz_chain_workdir }}
  
  
      - name: Building code Quartz
        run: |
          . $HOME/.cargo/env && cargo build --release --features=quartz-runtime
  
      - name: Upload Quartz Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Quartz-artifacts
          path: |
            ./target/release/unique-collator
            ./target/release/wbuild/quartz-runtime/quartz_runtime.compact.compressed.wasm
  
  build-Unique:
    # The type of runner that the job will run on
    runs-on: ci-01
  
    needs: pre-requisites
    name: Build Unique
  
    steps:
      - name: delete workdir
        run: rm -rf ${{ env.unique_quartz_workdir }}
  
  
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          #repository: ${{ src_repo_url }}
          path: ${{ env.unique_chain_workdir }}
  
  
      - name: Building code Unique
        run: |
          . $HOME/.cargo/env && cargo build --release --features=unique-runtime
  
      - name: Upload Unique Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Unique-artifacts
          path: |
            ./target/release/unique-collator
            ./target/release/wbuild/unique-runtime/unique_runtime.compact.compressed.wasm
  
