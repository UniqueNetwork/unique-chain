# Try-runtime checks
# https://cryptousetech.atlassian.net/wiki/spaces/CI/pages/2587656213/Try+runtime

# Triger: only call from main workflow(re-usable workflows)
on:
  workflow_call:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  prepare-execution-marix:

    name: Prepare execution matrix

    runs-on: self-hosted-ci
    outputs:
      matrix: ${{ steps.create_matrix.outputs.matrix }}

    steps:

      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3.1.0
        with:
          ref: ${{ github.head_ref }}  #Checking out head commit

      - name: Read .env file
        uses: xom9ikk/dotenv@v2

      - name: Create Execution matrix
        uses: CertainLach/create-matrix-action@v4
        id: create_matrix
        with:
          matrix: |
            network {opal}, wasm_name {opal}, replica_from_address {${{ env.OPAL_REPLICA_FROM }}}
            network {sapphire}, wasm_name {quartz}, replica_from_address {${{ env.SAPPHIRE_REPLICA_FROM }}}
            network {quartz}, wasm_name {quartz}, replica_from_address {${{ env.QUARTZ_REPLICA_FROM }}}
            network {unique}, wasm_name {unique}, replica_from_address {${{ env.UNIQUE_REPLICA_FROM }}}

  try-runtime:
    needs: prepare-execution-marix

    # The type of runner that the job will run on
    runs-on: [self-hosted-ci]
    continue-on-error: false         #Do not stop testing of matrix runs failed.  As it decided during PR review - it required 50/50& Let's check it with false.

    name: ${{ matrix.network }}-try-runtime
    strategy:
      matrix:
        include: ${{fromJson(needs.prepare-execution-marix.outputs.matrix)}}

    steps:

      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3.1.0
        with:
          ref: ${{ github.head_ref }}  #Checking out head commit

      - name: Read .env file
        uses: xom9ikk/dotenv@v2

      - name: Generate ENV related extend file for docker-compose
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: .docker/docker-compose.tmp-try-runtime.j2
          output_file: .docker/docker-compose.try-runtime.${{ matrix.network }}.yml
          variables: |
            RUST_TOOLCHAIN=${{ env.RUST_TOOLCHAIN }}
            NETWORK=${{ matrix.network }}
            WASM_NAME=${{ matrix.wasm_name }}
            REPLICA_FROM=${{ matrix.replica_from_address }}

      - name: Show build configuration
        run: cat .docker/docker-compose.try-runtime.${{ matrix.network }}.yml

      - name: Build the stack
        run: docker-compose -f ".docker/docker-compose.try-runtime.${{ matrix.network }}.yml" up --build  --force-recreate --timeout 300 --remove-orphans --exit-code-from try-runtime

      - name: Collect Docker Logs
        if: success() || failure()
        uses: jwalton/gh-docker-logs@v2.2.1
        with:
          dest: './try-runtime-logs.${{ matrix.network }}'
          images: 'try-runtime'

      - name: Show docker logs
        run: cat './try-runtime-logs.${{ matrix.network }}/try-runtime.log'

      - name: Stop running containers
        if: always()                   # run this step always
        run: docker-compose -f ".docker/docker-compose.try-runtime.${{ matrix.network }}.yml" down

      - name: Remove builder cache
        if: always()                   # run this step always
        run: |
          docker builder prune -f -a
          docker system prune -f
          docker image prune -f -a
