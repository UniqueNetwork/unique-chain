# https://cryptousetech.atlassian.net/wiki/spaces/CI/pages/2586509375/Market+e2e+test
# Nested workflow for lunching Market e2e tests from external repository https://github.com/UniqueNetwork/market-e2e-tests

name: market api tests

# Controls when the action will run.
on:
  workflow_call:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  prepare-execution-marix:

    name: Prepare execution matrix

    runs-on: [self-hosted-ci]
    outputs:
      matrix: ${{ steps.create_matrix.outputs.matrix }}

    steps:

      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3.1.0
        with:
          ref: ${{ github.head_ref }}  #Checking out head commit

      - name: Read .env file
        uses: xom9ikk/dotenv@v2

      - name: Create Execution matrix
        uses: CertainLach/create-matrix-action@v4
        id: create_matrix
        with:
          matrix: |
            network {opal}, relay_branch {${{ env.UNIQUEWEST_MAINNET_BRANCH }}}


  market_test:
    needs: prepare-execution-marix
    # The type of runner that the job will run on
    runs-on: [self-hosted-ci,large]
    timeout-minutes: 360

    name: ${{ matrix.network }}    

    continue-on-error: true         #Do not stop testing of matrix runs failed.  As it decided during PR review - it required 50/50& Let's check it with false.
    
    strategy:
      matrix:
        include: ${{fromJson(needs.prepare-execution-marix.outputs.matrix)}}

    steps:
      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout master repo
        uses: actions/checkout@master
        with:
          ref: ${{ github.head_ref }}  #Checking out head commit

      - name: Checkout Market e2e tests
        uses: actions/checkout@v3.1.0
        with:
          repository: 'UniqueNetwork/market-e2e-tests'
          ssh-key: ${{ secrets.GH_PAT }}
          path: 'qa-tests'
          ref: 'master'

      - name: Read .env file
        uses: xom9ikk/dotenv@v2
      
      - name: Copy qa-tests/.env.example to qa-tests/.env
        working-directory: qa-tests
        run: cp .env.docker .env
        
      - name: Generate ENV related extend file for docker-compose
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: qa-tests/.docker/docker-compose.tmp-market.j2
          output_file: qa-tests/.docker/docker-compose.${{ matrix.network }}.yml
          variables: |
            REPO_URL=${{ github.server_url }}/${{ github.repository }}.git
            RUST_TOOLCHAIN=${{ env.RUST_TOOLCHAIN }}
            POLKADOT_BUILD_BRANCH=${{ matrix.relay_branch }}
            POLKADOT_LAUNCH_BRANCH=${{ env.POLKADOT_LAUNCH_BRANCH }}
            NETWORK=${{ matrix.network }}
            BRANCH=${{ github.head_ref }}


      - name: Show build configuration
        working-directory: qa-tests
        run: cat .docker/docker-compose.${{ matrix.network }}.yml

      - name: Start node-parachain
        working-directory: qa-tests
        run: docker-compose -f ".docker/docker-compose.market.yml" -f ".docker/docker-compose.${{ matrix.network }}.yml" up -d --build --remove-orphans --force-recreate node-parachain 
     
      - uses: actions/setup-node@v3.5.1
        with:
          node-version: 18

      - name: Setup TypeScript
        working-directory: qa-tests
        run: |
          npm install -g ts-node
          npm install

      - name: Copy qa-tests/.env.docker to qa-tests/.env
        working-directory: qa-tests
        run: | 
          rm -rf .env
          cp .env.docker .env

# Temporary disable node readyness check. Have to dig into the script logic.
#      - name: Wait for chain up and running
#        working-directory: tests
#        run: |
#          yarn install
#          ./scripts/wait_for_first_block.sh
#          echo "Ready to start tests"
#        env:
#          RPC_URL: http://127.0.0.1:9944/

      - name: Wait for chain up and running
        run: |
          sleep 1200s
          echo "Ready to start Market e2e tests"

      - name: Show content of .env file and Generate accounts
        working-directory: qa-tests
        run: |
          cat .env
          ts-node ./src/scripts/create-market-accounts.ts

      - name: Copy qa-tests/.env to qa-tests/.env.docker
        working-directory: qa-tests
        run: | 
          rm -rf .env.docker
          cp .env .env.docker

      - name: Get chain logs
        if: always()                   # run this step always
        run: |
          docker exec node-parachain cat /polkadot-launch/9944.log
          docker exec node-parachain cat /polkadot-launch/9945.log
          docker exec node-parachain cat /polkadot-launch/alice.log
          docker exec node-parachain cat /polkadot-launch/eve.log
          docker exec node-parachain cat /polkadot-launch/dave.log
          docker exec node-parachain cat /polkadot-launch/charlie.log
   
      - name: Deploy contracts
        run: |
          cd qa-tests
          ts-node ./src/scripts/deploy-contract.ts

      - name: Timeout for debug
        if: failure()
        run: sleep 300s

      - name: Import test data
        working-directory: qa-tests
        run: ts-node ./src/scripts/create-test-collections.ts

      - name: Show content of qa-test .env
        working-directory: qa-tests
        run: cat .env

      - name: Read qa -test .env file Before market start
        uses: xom9ikk/dotenv@v2
        with:
          path: qa-tests/

      - name: local-market:start
        run: docker-compose -f "qa-tests/.docker/docker-compose.market.yml" -f "qa-tests/.docker/docker-compose.${{ matrix.network }}.yml" up -d --build

      - name: Wait for market readyness
        working-directory: qa-tests
        run: src/scripts/wait-market-ready.sh
        shell: bash

      - name: Install dependecies
        working-directory: qa-tests
        run: |
          npm ci
          npm install -D @playwright/test
          npx playwright install-deps
          npx playwright install

      - name: Show content of qa-test .env
        working-directory: qa-tests
        run: cat .env
          
      - name: Test API interface
        working-directory: qa-tests
        run: |
          npx playwright test --workers=3 --quiet .*.api.test.ts --reporter=github --config playwright.config.ts

      - name: Timeout for debug
        if: failure()
        run: sleep 300s

      - name: Stop running containers
        if: always()                   # run this step always
        run: docker-compose -f "qa-tests/.docker/docker-compose.market.yml" -f "qa-tests/.docker/docker-compose.${{ matrix.network }}.yml" down --volumes

      - name: Remove builder cache
        if: always()                   # run this step always
        run: |
          docker builder prune -f
          docker system prune -f
