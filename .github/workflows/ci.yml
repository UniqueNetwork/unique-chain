name: Main CI

on:
  pull_request:
    branches:
      - master
      - develop
    types:
      - opened
      - reopened
      - synchronize   #commit(s) pushed to the pull request
      - ready_for_review

#concurrency:
#  group: ${{ github.workflow }}-${{ github.head_ref }}
#  cancel-in-progress: true


jobs:

  prepare-execution-marix:

    name: Prepare execution matrix

    runs-on: self-hosted-ci
    outputs:
      matrix: ${{ steps.create_matrix.outputs.matrix }}

    steps:

      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}  #Checking out head commit

      - name: Read .env file
        uses: xom9ikk/dotenv@v1.0.2

      - name: Create Execution matrix
        uses: CertainLach/create-matrix-action@v3
        id: create_matrix
        with:
          matrix: |
            network {opal}, runtime {opal}, features {opal-runtime}, mainnet_branch {${{ env.QUARTZ_MAINNET_TAG }}}, replica_from_address {${{ env.OPAL_REPLICA_FROM }}}
            network {quartz}, runtime {quartz}, features {quartz-runtime}, mainnet_branch {${{ env.QUARTZ_MAINNET_TAG }}}, replica_from_address {${{ env.QUARTZ_REPLICA_FROM }}}
            network {unique}, runtime {unique}, features {unique-runtime}, mainnet_branch {${{ env.UNIQUE_MAINNET_TAG }}}, replica_from_address {${{ env.UNIQUE_REPLICA_FROM }}}

    
  forkless-update-data:
    strategy:
      matrix:
        include: ${{fromJson(needs.prepare-execution-marix.outputs.matrix)}}
    needs: prepare-execution-marix
#    if: contains( github.event.pull_request.labels.*.name, 'forkless')
    uses: ./.github/workflows/forkless-update-data_v2.yml
    with:
      network: ${{ matrix.network }}
      runtime: ${{ matrix.runtime }}
      features: ${{ matrix.features }}
      mainnet_branch: ${{ matrix.mainnet_branch }}
      replica_from_address: ${{ matrix.replica_from_address }}
#
#
#  forkless-update-no-data:
#    if: contains( github.event.pull_request.labels.*.name, 'forkless')
#    uses: ./.github/workflows/forkless-update-nodata_v2.yml

#  try-runtime:
#    if: contains( github.event.pull_request.labels.*.name, 'forkless')
#    uses: ./.github/workflows/try-runtime_v2.yml






# ci.yml  codestyle.yml  dev-build-tests.yml  forkless-update-data.yml  forkless-update-nodata.yml  nodes-only-update.yml  tests_codestyle.yml  try-runtime.yml  unit-test.yml


#Как пример: 
#PR on develop feature-foreighn_assets
#выставляем label xcm
#Результат: помимо осн набора тестов PR на develop дополнительно активируется xcm конвеер
#label: forkless активирует
#           try-runtime
#           forkless upgrade nodata
#           forkless upgrade replica

#label: xcm активирует
#          xcm-unique
#          xcm-quartz
#          xcm-opal

#lable: canary активирует
#          canary marketplace  (отредактировано)
#name: nodes-only update


