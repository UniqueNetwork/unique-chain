# ===== Rust builder =====
FROM ubuntu:20.04 as rust-builder
LABEL maintainer="Unique.Network"

ARG RUST_TOOLCHAIN=

ENV RUST_TOOLCHAIN $RUST_TOOLCHAIN
ENV CARGO_HOME="/cargo-home"
ENV PATH="/cargo-home/bin:$PATH"
ENV TZ=UTC
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt-get update && \
    apt-get install -y curl cmake pkg-config libssl-dev git clang protobuf-compiler && \
    apt-get clean && \
    rm -r /var/lib/apt/lists/*

RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain none

RUN rustup toolchain uninstall $(rustup toolchain list) && \
    rustup toolchain install $RUST_TOOLCHAIN && \
    rustup default $RUST_TOOLCHAIN && \
    rustup target list --installed && \
    rustup show
RUN rustup target add wasm32-unknown-unknown --toolchain $RUST_TOOLCHAIN

RUN mkdir /unique_parachain
WORKDIR /unique_parachain


# ===== BUILD current version ======
FROM rust-builder as builder-unique-current

ARG PROFILE=release
ARG FEATURE=
ARG MAINNET_BRANCH=
ARG REPO_URL=

WORKDIR /unique_parachain

RUN git clone $REPO_URL -b $MAINNET_BRANCH . && \
    cargo build --features=$FEATURE --$PROFILE

# ===== BUILD target version ======
FROM rust-builder as builder-unique-target

ARG PROFILE=release
ARG FEATURE=

COPY . /unique_parachain
WORKDIR /unique_parachain

RUN cargo build --features=$FEATURE --$PROFILE

# ===== RUN ======

FROM ubuntu:20.04

ARG RUNTIME=
ENV RUNTIME $RUNTIME
ARG POLKADOT_BUILD_BRANCH=
ENV POLKADOT_BUILD_BRANCH $POLKADOT_BUILD_BRANCH

RUN apt-get -y update && \
    apt-get -y install curl git && \
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash && \
    export NVM_DIR="$HOME/.nvm" && \
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && \
    nvm install v16.16.0 && \
    nvm use v16.16.0

RUN git clone https://github.com/uniquenetwork/polkadot-launch -b unique-network

RUN export NVM_DIR="$HOME/.nvm" && \
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && \
    cd /polkadot-launch && \
    npm install --global yarn && \
    yarn install

RUN echo "$RUNTIME"
RUN echo "$POLKADOT_BUILD_BRANCH"

COPY --from=builder-unique-current /unique_parachain/target/release/unique-collator /unique-chain/current/release/
COPY --from=builder-unique-target /unique_parachain/target/release/unique-collator /unique-chain/target/release/

COPY --from=uniquenetwork/builder-polkadot:$POLKADOT_BUILD_BRANCH /unique_parachain/polkadot/target/release/polkadot /polkadot/target/release/

CMD export NVM_DIR="$HOME/.nvm" && \
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && \
    cd /polkadot-launch && \
    yarn start launch-config.json --test-upgrade-parachains -w -n


