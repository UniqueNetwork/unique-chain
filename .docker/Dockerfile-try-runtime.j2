# ===== Rust builder =====
FROM ubuntu:20.04 as rust-builder
LABEL maintainer="Unique.Network"

ENV CARGO_HOME="/cargo-home"
ENV PATH="/cargo-home/bin:$PATH"
ENV TZ=UTC
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt-get update && \
    apt-get install -y curl cmake pkg-config libssl-dev git clang protobuf-compiler && \
    apt-get clean && \
    rm -r /var/lib/apt/lists/*

RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain none

RUN rustup toolchain uninstall $(rustup toolchain list) && \
    rustup toolchain install {{ RUST_TOOLCHAIN }} && \
    rustup default {{ RUST_TOOLCHAIN }} && \
    rustup target list --installed && \
    rustup show
RUN rustup target add wasm32-unknown-unknown --toolchain {{ RUST_TOOLCHAIN }}

RUN mkdir /unique_parachain
WORKDIR /unique_parachain


# ===== BUILD ======
FROM rust-builder as builder-unique

ARG PROFILE=release

COPY . /unique_parachain
WORKDIR /unique_parachain

RUN echo "Requested features: {{ NETWORK }}-runtime\n" && \
    echo "Fork from: {{ REPLICA_FROM }}\n" && \
    cargo build --features=try-runtime,{{ NETWORK }}-runtime --release

CMD cargo run --release --features {{ NETWORK }}-runtime,try-runtime -- try-runtime --runtime target/release/wbuild/{{ WASM_NAME }}-runtime/{{ WASM_NAME }}_runtime.compact.compressed.wasm -lruntime=debug -ltry-runtime::cli=debug on-runtime-upgrade --checks live --uri {{ REPLICA_FROM }}
